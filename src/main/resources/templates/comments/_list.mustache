<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <button type="button" class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}"
                        onclick="editCommentData()">
                    수정
                </button>
                <button class="btn btn-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}" onclick="deleteComment()">
                    삭제
                </button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="">
                    <div class="mb-3">
                        <label for="edit-nickname" class="form-label">닉네임</label>
                        <input type="text" class="form-control form-control-sm" id="edit-nickname">
                    </div>
                    <div class="mb-3">
                        <label for="body" class="form-label">댓글 내용</label>
                        <textarea class="form-control" id="edit-body" rows="3"></textarea>
                    </div>

                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">

                    <button type="button" class="btn btn-outline-primary" id="comment-update-btn"
                            onclick="updateComment()">수정 완료
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function editCommentData() {
        const editModal = document.querySelector("#comment-edit-modal");
        editModal.addEventListener("show.bs.modal", function (event) {
            const button = event.relatedTarget;

            const id = button.getAttribute('data-bs-id');
            const nickname = button.getAttribute('data-bs-nickname');
            const body = button.getAttribute('data-bs-body');
            const articleId = button.getAttribute('data-bs-article-id');

            document.querySelector("#edit-nickname").value = nickname;
            document.querySelector("#edit-body").value = body;
            document.querySelector("#edit-comment-id").value = id;
            document.querySelector("#edit-comment-article-id").value = articleId;
        })
    }

    function updateComment() {
        const commentUpdateBtn = document.querySelector("#comment-update-btn")
        commentUpdateBtn.addEventListener("click", function () {
            const comment = {
                id: document.querySelector("#edit-comment-id").value,
                nickname: document.querySelector("#edit-nickname").value,
                body: document.querySelector("#edit-body").value,
                article_id: document.querySelector("#edit-comment-article-id").value
            }
            const url = `/api/comments/${comment.id}`;
            fetch(url, {
                method: "PATCH",
                body: JSON.stringify(comment),
                headers: {
                    "Content-Type": "application/json"
                }
            }).then((res) => {
                if (res.ok) {
                    alert("정상적으로 수정완료되었습니다.");
                    window.location.reload();
                } else {
                    alert("수정 실패하였습니다.")
                }
            }).catch(err => console.log(err));
        })
    }


    function deleteComment() {
        const deleteBtn = document.querySelectorAll(".comment-delete-btn");
        deleteBtn.forEach((btn) => {
            btn.addEventListener("click", (event) => {

                const deleteBtn = event.target;
                const commentId = deleteBtn.getAttribute("data-comment-id");
                const url = `/api/comments/${commentId}`;

                fetch(url, {
                    method: "delete",
                }).then((res) => {
                    if (res.ok) {
                        alert("삭제 완료되었습니다.");
                        // window.location.reload();
                        const target = document.querySelector(`#comments-${commentId}`);
                        target.remove();
                        return;
                    } else {
                        alert("삭제 실패하였습니다.");
                    }
                })

            })
        })
    }

    function init() {
        editCommentData()
        updateComment()
    }

    init()
</script>